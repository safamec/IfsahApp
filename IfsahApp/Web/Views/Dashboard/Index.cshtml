@using IfsahApp.Core.ViewModels
@model IEnumerable<DisclosureDashboardViewModel>

@inject IfsahApp.Infrastructure.Services.IEnumLocalizer EnumLocalizer

@{
    ViewBag.Title = "Review Dashboard";
    var sizes = new int[] { 5, 10, 20, 50 };
}

<div class="container-custom">
    <h2>Review Admin Dashboard</h2>

    <!-- Filter Box -->
    <form method="get" class="filter-box">
        <!-- Status Filter -->
        <div class="form-group">
    <label for="status">Status</label>
    <select name="status" id="status" class="filter-input">
    @foreach (var item in ViewBag.StatusList as List<SelectListItem>)
    {
        if (item.Selected)
        {
            <option value="@item.Value" selected>@item.Text</option>
        }
        else
        {
            <option value="@item.Value">@item.Text</option>
        }
    }
</select>

</div>


        <!-- Reference Filter -->
        <div class="form-group">
            <label for="reference">Reference</label>
            <input type="text" name="reference" id="reference" class="filter-input"
                   value="@ViewBag.SelectedReference" placeholder="Enter reference">
        </div>

        <!-- Page Size Filter -->
        <div class="form-group">
    <label for="pageSize">Show</label>
    <select name="pageSize" id="pageSize" class="filter-input">
        @foreach (var size in new int[] { 5, 10, 20, 50 })
        {
            if (ViewBag.PageSize == size)
            {
                <option value="@size" selected>@size</option>
            }
            else
            {
                <option value="@size">@size</option>
            }
        }
    </select>
</div>


        <!-- Filter Buttons -->
        <div class="button-group">
            <button type="submit" class="filter-btn">Filter</button>
            <a href="@Url.Action("Index", "Dashboard")" class="clear-btn">Clear</a>
        </div>
    </form>

    <!-- Table -->
    <div class="table-custom-responsive">
        <table class="table-custom">
            <thead>
                <tr>
                    <th>Action</th>
                    <th>Status</th>
                    <th>Location</th>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Reference</th>
                </tr>
            </thead>
            <tbody>
                @if (Model == null || !Model.Any())
                {
                    <tr>
                        <td colspan="6">No data available.</td>
                    </tr>
                }
                else
                {
                    @foreach(var item in Model)
                    {
                        <tr>
                            <td>
                                <a href="@Url.Action("ReviewDisclosure","Review", new { reference = item.Reference })"
                                   class="table-btn table-btn-sm">Review</a>
                            </td>
                            <td>@item.Status</td>
                            <td>@item.Location</td>
                            <td>@item.Date.ToString("yyyy-MM-dd")</td>
                            <td>@item.Type</td>
                            <td>@item.Reference</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <nav>
        <ul class="pagination-custom">
            <!-- Previous button -->
            <li class="@(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a href="@Url.Action("Index", new { status = (ViewBag.StatusList as List<SelectListItem>).FirstOrDefault(i => i.Selected)?.Value ?? "All", reference = ViewBag.SelectedReference, page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })">Previous</a>
            </li>

            <!-- Page numbers -->
            @for(int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="@(ViewBag.CurrentPage == i ? "active" : "")">
                    <a href="@Url.Action("Index", new { status = (ViewBag.StatusList as List<SelectListItem>).FirstOrDefault(s => s.Selected)?.Value ?? "All", reference = ViewBag.SelectedReference, page = i, pageSize = ViewBag.PageSize })">@i</a>
                </li>
            }

            <!-- Next button -->
            <li class="@(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                <a href="@Url.Action("Index", new { status = (ViewBag.StatusList as List<SelectListItem>).FirstOrDefault(i => i.Selected)?.Value ?? "All", reference = ViewBag.SelectedReference, page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })">Next</a>
            </li>
        </ul>
    </nav>
</div>
