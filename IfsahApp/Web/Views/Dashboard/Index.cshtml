@model IEnumerable<DisclosureDashboardViewModel>

@inject IfsahApp.Infrastructure.Services.IEnumLocalizer EnumLocalizer
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

<div class="dashboard-container container-fluid pt-4">
    <h2 class="text-center mb-4">@Localizer["DashboardTitle"]</h2>

    <!-- Filter Dropdown -->
    <select class="form-select w-auto" id="statusSelect" onchange="applyFilters()">
        @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.StatusList)
        {
            <option value="@item.Value" selected="@(item.Selected ? "selected" : null)">
                @item.Text
            </option>
        }
    </select>

    <!-- Disclosures Table -->
    <table class="table table-bordered table-hover text-center align-middle">
        <thead class="table-secondary">
            <tr>
                <th>@Localizer["HeaderActions"]</th>
                <th>@Localizer["HeaderStatus"]</th>
                <th>@Localizer["HeaderLocation"]</th>
                <th>@Localizer["HeaderDate"]</th>
                <th>@Localizer["HeaderType"]</th>
                <th>@Localizer["HeaderReference"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var badgeClass = item.Status switch
                {
                    DisclosureStatus.New => "bg-warning text-dark",
                    DisclosureStatus.Assigned => "bg-info text-dark",
                    DisclosureStatus.InReview => "bg-primary text-white",
                    DisclosureStatus.Completed => "bg-success",
                    _ => "bg-secondary"
                };

                <tr>
                    <td>
                        <!-- Fixed: use Details action instead of View -->
                        <a asp-action="Details"
                           asp-controller="Dashboard"
                           asp-route-id="@item.Id"
                           class="btn btn-sm btn-primary">
                            @Localizer["ActionView"]
                        </a>
                    </td>
                    <td>
                        <span class="badge @badgeClass">
                            @EnumLocalizer.LocalizeEnum(item.Status)
                        </span>
                    </td>
                    <td>@item.Location</td>
                    <td>@item.Date.ToString("yyyy-MM-dd")</td>
                    <td>@item.Type</td>
                    <td>@item.Reference</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function applyFilters() {
            const status = document.getElementById('statusSelect').value;
            const url = new URL(window.location.href);
            url.searchParams.set("status", status);
            window.location.href = url;
        }
    </script>
}
