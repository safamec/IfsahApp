// <auto-generated />
using System;
using IfsahApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IfsahApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250902101743_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("IfsahApp.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PerformedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PerformedById");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("IfsahApp.Models.Disclosure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisclosureNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DisclosureTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("IncidentEndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("IncidentStartDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAccuracyConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubmittedById")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DisclosureTypeId");

                    b.HasIndex("SubmittedById");

                    b.ToTable("Disclosures");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisclosureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExaminerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DisclosureId");

                    b.HasIndex("ExaminerId");

                    b.HasIndex("UserId");

                    b.ToTable("DisclosureAssignments");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisclosureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DisclosureId");

                    b.ToTable("DisclosureAttachments");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisclosureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DisclosureId");

                    b.ToTable("DisclosureNotes");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosurePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisclosureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DisclosurePersons", (string)null);

                    b.HasDiscriminator<string>("PersonType").HasValue("DisclosurePerson");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisclosureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Outcome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportFilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewSummary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReviewedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DisclosureId")
                        .IsUnique();

                    b.HasIndex("ReviewerId");

                    b.ToTable("DisclosureReviews");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DisclosureTypes");
                });

            modelBuilder.Entity("IfsahApp.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("IfsahApp.Models.RoleDelegation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("FromUserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPermanent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ToUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToUserId");

                    b.ToTable("RoleDelegations");
                });

            modelBuilder.Entity("IfsahApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ADUserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ADUserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IfsahApp.Models.UserNotificationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotifyOnAssignment")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotifyOnReview")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotifyOnSubmission")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ViaEmail")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ViaSystem")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotificationPreferences");
                });

            modelBuilder.Entity("IfsahApp.Models.RelatedPerson", b =>
                {
                    b.HasBaseType("IfsahApp.Models.DisclosurePerson");

                    b.HasIndex("DisclosureId");

                    b.HasDiscriminator().HasValue("Related");
                });

            modelBuilder.Entity("IfsahApp.Models.SuspectedPerson", b =>
                {
                    b.HasBaseType("IfsahApp.Models.DisclosurePerson");

                    b.HasIndex("DisclosureId");

                    b.HasDiscriminator().HasValue("Suspected");
                });

            modelBuilder.Entity("IfsahApp.Models.AuditLog", b =>
                {
                    b.HasOne("IfsahApp.Models.User", "PerformedBy")
                        .WithMany()
                        .HasForeignKey("PerformedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerformedBy");
                });

            modelBuilder.Entity("IfsahApp.Models.Disclosure", b =>
                {
                    b.HasOne("IfsahApp.Models.DisclosureType", "DisclosureType")
                        .WithMany("Disclosures")
                        .HasForeignKey("DisclosureTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfsahApp.Models.User", "SubmittedBy")
                        .WithMany("SubmittedDisclosures")
                        .HasForeignKey("SubmittedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisclosureType");

                    b.Navigation("SubmittedBy");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureAssignment", b =>
                {
                    b.HasOne("IfsahApp.Models.Disclosure", "Disclosure")
                        .WithMany("Assignments")
                        .HasForeignKey("DisclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfsahApp.Models.User", "Examiner")
                        .WithMany()
                        .HasForeignKey("ExaminerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IfsahApp.Models.User", null)
                        .WithMany("AssignedDisclosures")
                        .HasForeignKey("UserId");

                    b.Navigation("Disclosure");

                    b.Navigation("Examiner");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureAttachment", b =>
                {
                    b.HasOne("IfsahApp.Models.Disclosure", "Disclosure")
                        .WithMany("Attachments")
                        .HasForeignKey("DisclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disclosure");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureNote", b =>
                {
                    b.HasOne("IfsahApp.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IfsahApp.Models.Disclosure", "Disclosure")
                        .WithMany("Notes")
                        .HasForeignKey("DisclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Disclosure");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureReview", b =>
                {
                    b.HasOne("IfsahApp.Models.Disclosure", "Disclosure")
                        .WithOne("FinalReview")
                        .HasForeignKey("IfsahApp.Models.DisclosureReview", "DisclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfsahApp.Models.User", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disclosure");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("IfsahApp.Models.Notification", b =>
                {
                    b.HasOne("IfsahApp.Models.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("IfsahApp.Models.RoleDelegation", b =>
                {
                    b.HasOne("IfsahApp.Models.User", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IfsahApp.Models.User", "ToUser")
                        .WithMany()
                        .HasForeignKey("ToUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("IfsahApp.Models.UserNotificationPreference", b =>
                {
                    b.HasOne("IfsahApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IfsahApp.Models.RelatedPerson", b =>
                {
                    b.HasOne("IfsahApp.Models.Disclosure", "Disclosure")
                        .WithMany("RelatedPeople")
                        .HasForeignKey("DisclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disclosure");
                });

            modelBuilder.Entity("IfsahApp.Models.SuspectedPerson", b =>
                {
                    b.HasOne("IfsahApp.Models.Disclosure", "Disclosure")
                        .WithMany("SuspectedPeople")
                        .HasForeignKey("DisclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disclosure");
                });

            modelBuilder.Entity("IfsahApp.Models.Disclosure", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Attachments");

                    b.Navigation("FinalReview")
                        .IsRequired();

                    b.Navigation("Notes");

                    b.Navigation("RelatedPeople");

                    b.Navigation("SuspectedPeople");
                });

            modelBuilder.Entity("IfsahApp.Models.DisclosureType", b =>
                {
                    b.Navigation("Disclosures");
                });

            modelBuilder.Entity("IfsahApp.Models.User", b =>
                {
                    b.Navigation("AssignedDisclosures");

                    b.Navigation("SubmittedDisclosures");
                });
#pragma warning restore 612, 618
        }
    }
}
