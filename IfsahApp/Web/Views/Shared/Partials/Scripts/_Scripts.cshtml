@* نفس المراجع والسكريبت كما هي *@
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

<script>
    // بيانات الترجمة
    const translations = {
        ar: {
            ministry_name: "وزارة الطاقة والمعادن",
            country_name: "سلطنة عُمان",
            ministry_name_en: "Ministry of Energy and Minerals",
            system_name: "نظام تلقي الإفصاحات",
            system_short_name: "نظام الإفصاحات",
            home: "الرئيسية",
            new_disclosure: "إفصاح جديد",
            dashboard: "لوحة التحكم",
            reports: "التقارير",
            more: "المزيد",
            faq: "الأسئلة الشائعة",
            user_guide: "دليل الاستخدام",
            contact_us: "اتصل بنا",
            login: "تسجيل الدخول",
            user: "المستخدم",
            profile: "الملف الشخصي",
            logout: "تسجيل الخروج",
            help: "المساعدة",
            welcome_title: "مرحباً بك في نظام تلقي الإفصاحات",
            welcome_message: "نظام آمن وسري للإفصاح عن المخالفات في وزارة الطاقة والمعادن. نحن نضمن حماية المبلغين وتقديم الدعم اللازم.",
            learn_more: "تعرف أكثر",
            contact: "اتصل بنا",
            footer_mission: "نعمل على تعزيز الشفافية ومكافحة الفساد وحماية المبلغين",
            contact_info: "معلومات التواصل",
            location: "مسقط، سلطنة عُمان",
            security_privacy: "الأمان والخصوصية",
            ssl_encryption: "تشفير SSL 256-bit",
            data_protection: "حماية البيانات وفقاً لأعلى المعايير",
            confidentiality: "سرية المعلومات مضمونة",
            copyright: "© جميع الحقوق محفوظة 2025 - وزارة الطاقة والمعادن",
            privacy_policy: "سياسة الخصوصية",
            terms_conditions: "الشروط والأحكام",
            sitemap: "خريطة الموقع",
            info_confidentiality: "سرية المعلومات مضمونة"
        },
        en: {
            ministry_name: "Ministry of Energy and Minerals",
            country_name: "Sultanate of Oman",
            ministry_name_en: "Ministry of Energy and Minerals",
            system_name: "Disclosure Receiving System",
            system_short_name: "Disclosure System",
            home: "Home",
            new_disclosure: "New Disclosure",
            dashboard: "Dashboard",
            reports: "Reports",
            more: "More",
            faq: "FAQ",
            user_guide: "User Guide",
            contact_us: "Contact Us",
            login: "Login",
            user: "User",
            profile: "Profile",
            logout: "Logout",
            help: "Help",
            welcome_title: "Welcome to the Disclosure Receiving System",
            welcome_message: "A secure and confidential system for reporting violations at the Ministry of Energy and Minerals. We ensure whistleblower protection and necessary support.",
            learn_more: "Learn More",
            contact: "Contact Us",
            footer_mission: "We work to enhance transparency, combat corruption, and protect whistleblowers",
            contact_info: "Contact Information",
            location: "Muscat, Sultanate of Oman",
            security_privacy: "Security & Privacy",
            ssl_encryption: "SSL 256-bit Encryption",
            data_protection: "Data protection according to highest standards",
            confidentiality: "Information confidentiality guaranteed",
            copyright: "© All rights reserved 2025 - Ministry of Energy and Minerals",
            privacy_policy: "Privacy Policy",
            terms_conditions: "Terms & Conditions",
            sitemap: "Sitemap",
            info_confidentiality: "Information confidentiality guaranteed"
        }
    };

    // إدارة الحالة
    let currentTheme = 'light';
    let currentLanguage = 'ar';
    let userRole = null;
    let isLoggedIn = false;

    // تهيئة عند التحميل
    document.addEventListener('DOMContentLoaded', function() {
        initializeTheme();
        initializeLanguage();
        initializeAnimations();
        bindEvents();
        updateNavigationForUser();

        setTimeout(() => {
            showMessage(currentLanguage === 'ar'
                ? 'مرحباً بك في نظام تلقي الإفصاحات'
                : 'Welcome to the Disclosure Receiving System', 'success');
        }, 1000);
    });

    // ربط الأحداث
    function bindEvents() {
        document.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', function(e) {
                if (!this.getAttribute('onclick') && this.getAttribute('href') === '#') {
                    e.preventDefault();
                    const text = this.textContent.trim();
                    showMessage(`${currentLanguage === 'ar' ? 'تم النقر على: ' : 'Clicked on: '}${text}`, 'info');
                }
            });
            link.addEventListener('mouseenter', function() { this.style.transform = 'translateY(-2px)'; });
            link.addEventListener('mouseleave', function() { this.style.transform = 'translateY(0)'; });
        });
    }

    // إدارة السمة
    function toggleTheme() {
        currentTheme = currentTheme === 'light' ? 'dark' : 'light';
        document.documentElement.setAttribute('data-theme', currentTheme);
        const themeIcon = document.getElementById('theme-icon');
        if (themeIcon) themeIcon.className = currentTheme === 'light' ? 'bi bi-moon-fill' : 'bi bi-sun-fill';
        localStorage.setItem('theme', currentTheme);
        showMessage(currentLanguage === 'ar'
            ? `تم التبديل إلى الوضع ${currentTheme === 'light' ? 'الفاتح' : 'الداكن'}`
            : `Switched to ${currentTheme === 'light' ? 'light' : 'dark'} mode`, 'success');
    }

    function initializeTheme() {
        const savedTheme = localStorage.getItem('theme') || 'light';
        currentTheme = savedTheme;
        document.documentElement.setAttribute('data-theme', currentTheme);
        const themeIcon = document.getElementById('theme-icon');
        if (themeIcon) themeIcon.className = currentTheme === 'light' ? 'bi bi-moon-fill' : 'bi bi-sun-fill';
    }

    // اللغة
    function switchLanguage(lang) {
        currentLanguage = lang;
        document.querySelectorAll('.language-switcher button').forEach(btn => btn.classList.remove('active'));
        if (lang === 'ar') document.getElementById('ar-btn').classList.add('active');
        else document.getElementById('en-btn').classList.add('active');

        document.documentElement.lang = lang;
        document.documentElement.dir = lang === 'ar' ? 'rtl' : 'ltr';
        updateTextContent();
        localStorage.setItem('language', lang);
        showMessage(lang === 'ar' ? 'تم التبديل إلى اللغة العربية' : 'Switched to English', 'success');
    }

    function updateTextContent() {
        document.querySelectorAll('[data-translate]').forEach(el => {
            const key = el.getAttribute('data-translate');
            if (translations[currentLanguage][key]) el.textContent = translations[currentLanguage][key];
        });
    }

    function initializeLanguage() {
        const savedLanguage = localStorage.getItem('language') || 'ar';
        currentLanguage = savedLanguage;
        document.getElementById('ar-btn').classList.toggle('active', currentLanguage === 'ar');
        document.getElementById('en-btn').classList.toggle('active', currentLanguage === 'en');
        document.documentElement.lang = currentLanguage;
        document.documentElement.dir = currentLanguage === 'ar' ? 'rtl' : 'ltr';
        updateTextContent();
    }

    // محاكاة تسجيل الدخول
    function simulateLogin() {
        const loginModal = `
<div class="modal fade" id="loginModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog"><div class="modal-content">
    <div class="modal-header">
      <h5 class="modal-title" data-translate="login">تسجيل الدخول</h5>
      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="modal-body">
      <form id="loginForm">
        <div class="mb-3">
          <label for="username" class="form-label" data-translate="username">اسم المستخدم</label>
          <input type="text" class="form-control" id="username" required>
        </div>
        <div class="mb-3">
          <label for="password" class="form-label" data-translate="password">كلمة المرور</label>
          <input type="password" class="form-control" id="password" required>
        </div>
        <button type="submit" class="btn btn-primary w-100" data-translate="login">تسجيل الدخول</button>
      </form>
    </div>
  </div></div>
</div>`;
        if (!document.getElementById('loginModal')) {
            document.body.insertAdjacentHTML('beforeend', loginModal);
            if (currentLanguage === 'en') {
                document.querySelector('[data-translate="login"]').textContent = 'Login';
                document.querySelector('[data-translate="username"]').textContent = 'Username';
                document.querySelector('[data-translate="password"]').textContent = 'Password';
            }
            document.getElementById('loginForm').addEventListener('submit', function(e) {
                e.preventDefault();
                isLoggedIn = true;
                userRole = 'User';
                updateNavigationForUser();
                bootstrap.Modal.getInstance(document.getElementById('loginModal')).hide();
                showMessage(currentLanguage === 'ar' ? 'تم تسجيل الدخول بنجاح' : 'Logged in successfully', 'success');
            });
        }
        const loginModalElement = new bootstrap.Modal(document.getElementById('loginModal'));
        loginModalElement.show();
    }

    function logout() {
        isLoggedIn = false;
        userRole = null;
        updateNavigationForUser();
        showMessage(currentLanguage === 'ar' ? 'تم تسجيل الخروج بنجاح' : 'Logged out successfully', 'info');
    }

    function updateNavigationForUser() {
        const loginNav = document.getElementById('login-nav');
        const userNav = document.getElementById('user-nav');
        const newDisclosureNav = document.getElementById('new-disclosure-nav');
        const dashboardNav = document.getElementById('dashboard-nav');
        const reportsNav = document.getElementById('reports-nav');

        if (isLoggedIn) {
            loginNav.style.display = 'none';
            userNav.style.display = 'block';
            newDisclosureNav.style.display = 'block';
            if (userRole === 'Admin') {
                dashboardNav.style.display = 'block';
                reportsNav.style.display = 'block';
            } else {
                dashboardNav.style.display = 'none';
                reportsNav.style.display = 'none';
            }
        } else {
            loginNav.style.display = 'block';
            userNav.style.display = 'none';
            newDisclosureNav.style.display = 'none';
            dashboardNav.style.display = 'none';
            reportsNav.style.display = 'none';
        }
    }

    function showHelp() {
        showMessage(currentLanguage === 'ar'
            ? 'يمكنك الاتصال بنا على +968 24640555 للحصول على المساعدة'
            : 'You can contact us at +968 24640555 for assistance', 'info');
    }

    function showMessage(message, type) {
        const messagesContainer = document.getElementById('messages-container');
        const existingAlerts = messagesContainer.querySelectorAll('.alert');
        if (existingAlerts.length > 2) existingAlerts[0].remove();

        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type === 'error' ? 'danger' : type === 'info' ? 'info' : 'success'} alert-dismissible fade show`;
        alertDiv.innerHTML = `
            <i class="bi ${type === 'error' ? 'bi-exclamation-circle-fill' : type === 'info' ? 'bi-info-circle-fill' : 'bi-check-circle-fill'} me-2"></i>
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>`;
        messagesContainer.appendChild(alertDiv);

        setTimeout(() => {
            if (alertDiv.parentNode) {
                alertDiv.classList.remove('show');
                setTimeout(() => alertDiv.remove(), 150);
            }
        }, 5000);
    }

    function initializeAnimations() {
        const fadeElements = document.querySelectorAll('.fade-in');
        if (fadeElements.length > 0) {
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => { if (entry.isIntersecting) entry.target.classList.add('visible'); });
            }, { threshold: 0.1 });
            fadeElements.forEach(element => observer.observe(element));
        }
    }

    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            const openDropdowns = document.querySelectorAll('.dropdown-menu.show');
            openDropdowns.forEach(dropdown => {
                const dropdownInstance = bootstrap.Dropdown.getInstance(dropdown.previousElementSibling);
                if (dropdownInstance) dropdownInstance.hide();
            });
        }
    });

    // حفظ الأشخاص من المودال (كما هو مطلوب لأن النموذج يستدعيه)
    function savePerson(e) {
        e.preventDefault();
        // ضع منطق الحفظ الفعلي هنا إن أردت
        showMessage(currentLanguage === 'ar' ? 'تمت إضافة الشخص' : 'Person added', 'success');
        const modalEl = document.getElementById('personModal');
        bootstrap.Modal.getInstance(modalEl)?.hide();
        return false;
    }
</script>
