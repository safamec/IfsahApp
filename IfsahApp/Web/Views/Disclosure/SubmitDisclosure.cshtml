@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var tokens = Antiforgery.GetAndStoreTokens(Context);
    var reportNumber = ViewData["ReportNumber"]?.ToString() ?? "";
}

<div class="card shadow-sm border-0 rounded-3 mt-4" dir="rtl">
  <div class="card-body p-4">
    <div class="d-flex align-items-center gap-2 mb-3">
      <span class="d-inline-flex align-items-center justify-content-center rounded-circle"
            style="width:36px;height:36px;background:#e9f2ff;">
        <!-- Envelope-check icon -->
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="#0d6efd" viewBox="0 0 16 16" aria-hidden="true">
          <path d="M0 4a2 2 0 0 1 2-2h8.5a.5.5 0 0 1 0 1H2a1 1 0 0 0-1 1v.217l6.293 3.147a1 1 0 0 0 .914 0L14 4.217V4a.5.5 0 0 1 1 0v1.383l-1 1V4.383L8.707 7.53a2 2 0 0 1-1.414 0L1 4.383V12a1 1 0 0 0 1 1h6.5a.5.5 0 0 1 0 1H2a2 2 0 0 1-2-2z"/>
          <path d="M15.854 8.146a.5.5 0 0 1 0 .708l-3.5 3.5a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L12 11.293l3.146-3.147a.5.5 0 0 1 .708 0"/>
        </svg>
      </span>
      <div class="fw-bold">تفعيل التنبيهات لتحديثات البلاغ (اختياري)</div>
    </div>

    <div class="input-group input-group-lg">
      <input id="subsEmail" type="email" class="form-control"
             placeholder="name&#64;example.com" autocomplete="email" />
      <button id="btnVerify" type="button"
              class="btn btn-primary d-inline-flex align-items-center gap-2 px-4">
        <span class="btn-text">إرسال رابط التفعيل</span>
        <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
      </button>
    </div>

    <div id="verifyStatus" class="small mt-3"></div>
  </div>
</div>

<script>
(() => {
  const btn = document.getElementById('btnVerify');
  const emailInput = document.getElementById('subsEmail');
  const spinner = btn.querySelector('.spinner-border');
  const btnText = btn.querySelector('.btn-text');
  const status = document.getElementById('verifyStatus');

  // حقن القيم من Razor
  const reportNumber = '@reportNumber';
  const antiToken = '@tokens.RequestToken';

  function setLoading(loading) {
    if (loading) {
      btn.disabled = true;
      emailInput.disabled = true;
      spinner.classList.remove('d-none');
      btnText.textContent = 'جارٍ الإرسال...';
    } else {
      btn.disabled = false;
      emailInput.disabled = false;
      spinner.classList.add('d-none');
      btnText.textContent = 'إرسال رابط التفعيل';
    }
  }

  function showMsg(html, css) {
    status.className = 'small mt-3 ' + (css || '');
    status.innerHTML = html;
  }

  function validEmail(v) {
    return /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/.test(v);
  }

  emailInput.addEventListener('input', () => {
    emailInput.classList.remove('is-invalid');
    status.textContent = '';
  });

  emailInput.addEventListener('keydown', (e) => {
    if (e.key === 'Enter') btn.click();
  });

  btn.addEventListener('click', async () => {
    const email = (emailInput.value || '').trim();
    status.textContent = '';

    if (!validEmail(email)) {
      emailInput.classList.add('is-invalid');
      showMsg('رجاءً أدخل بريدًا إلكترونيًا صحيحًا.', 'text-danger');
      return;
    }

    setLoading(true);
    try {
      await fetch('/Disclosure/SubscribeEmail', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'RequestVerificationToken': antiToken
        },
        body: JSON.stringify({ reportNumber, email })
      });

      // رسالة محايدة تحافظ على الخصوصية
      showMsg('تم استلام الطلب. ستصلك رسالة لتأكيد تفعيل التنبيهات خلال دقائق. ✅', 'text-success');
    } catch (e) {
      showMsg('تعذّر إرسال الطلب الآن، يُرجى المحاولة لاحقًا.', 'text-warning');
    } finally {
      setLoading(false);
    }
  });
})();
</script>
