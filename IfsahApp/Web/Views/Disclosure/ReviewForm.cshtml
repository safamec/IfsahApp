@model IfsahApp.Core.ViewModels.DisclosureFormViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = Localizer["Review Disclosure"];
    ViewData["Step"]  = Model.Step;

    // Safe lookup for the disclosure type text
    var types = (ViewBag.DisclosureTypes as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>();
    var dtId  = Model.DisclosureTypeId.ToString();
    var disclosureTypeText = types.FirstOrDefault(t => string.Equals(t.Value, dtId, StringComparison.Ordinal))?.Text ?? dtId;

    string S(string? v) => string.IsNullOrWhiteSpace(v) ? "—" : v!;
    string D(DateTime? d) => d.HasValue ? d.Value.ToString("yyyy-MM-dd") : "—";
}

@section StepTabs { @await Html.PartialAsync("_DisclosureTabs") }

<h2>@ViewData["Title"]</h2>

<!-- Disclosure Details -->
<div class="mb-4">
    <h4>@Localizer["Disclosure Details"]</h4>
    <div class="table-responsive">
        <table class="table table-bordered align-middle">
            <thead>
                <tr>
                    <th>@Localizer["Disclosure Type"]</th>
                    <th>@Localizer["Description"]</th>
                    <th>@Localizer["Location"]</th>
                    <th>@Localizer["Incident Start Date"]</th>
                    <th>@Localizer["Incident End Date"]</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@S(disclosureTypeText)</td>
                    <td>@S(Model.Description)</td>
                    <td>@S(Model.Location)</td>
                    <td>@D(Model.IncidentStartDate)</td>
                    <td>@D(Model.IncidentEndDate)</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Suspected People -->
<div class="mb-4">
    <h4>@Localizer["Suspected People"]</h4>
    @if (Model.SuspectedPersons != null && Model.SuspectedPersons.Any())
    {
        <div class="table-responsive">
            <table class="table table-bordered align-middle">
                <thead>
                    <tr>
                        <th>@Localizer["Name"]</th>
                        <th>@Localizer["Email"]</th>
                        <th>@Localizer["Phone"]</th>
                        <th>@Localizer["Organization"]</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var sp in Model.SuspectedPersons)
                    {
                        <tr>
                            <td>@S(sp?.Name)</td>
                            <td>@S(sp?.Email)</td>
                            <td>@S(sp?.Phone)</td>
                            <td>@S(sp?.Organization)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="text-muted mb-0">@Localizer["No suspected people"]</p>
    }
</div>

<!-- Related People -->
<div class="mb-4">
    <h4>@Localizer["Related People"]</h4>
    @if (Model.RelatedPersons != null && Model.RelatedPersons.Any())
    {
        <div class="table-responsive">
            <table class="table table-bordered align-middle">
                <thead>
                    <tr>
                        <th>@Localizer["Name"]</th>
                        <th>@Localizer["Email"]</th>
                        <th>@Localizer["Phone"]</th>
                        <th>@Localizer["Organization"]</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var rp in Model.RelatedPersons)
                    {
                        <tr>
                            <td>@S(rp?.Name)</td>
                            <td>@S(rp?.Email)</td>
                            <td>@S(rp?.Phone)</td>
                            <td>@S(rp?.Organization)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="text-muted mb-0">@Localizer["No related people"]</p>
    }
</div>

<!-- Attachments -->
<div class="mb-4">
    <h4>@Localizer["Attachments"]</h4>
    @if (Model.SavedAttachmentPaths != null && Model.SavedAttachmentPaths.Any())
    {
        <ul class="list-unstyled mb-0">
            @foreach (var name in Model.SavedAttachmentPaths)
            {
                <li><a href="~/tempUploads/@name" target="_blank" rel="noopener">@name</a></li>
            }
        </ul>
    }
    else
    {
        <p class="text-muted mb-0">@Localizer["No attachments"]</p>
    }
</div>

<!-- ===================== FORM (Declarations + Actions) ===================== -->
<form asp-action="ReviewForm" method="post" novalidate>
    @Html.AntiForgeryToken()

   <!-- === Declarations (خارج شريط الأزرار) === -->
<div class="declarations-strip mb-3"
     lang="@System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName">

  <h6 class="mb-3">@Localizer["Declarations"]</h6>

  <div class="declarations-list">
    <label class="declaration-row">
      <input class="form-check-input" type="checkbox" id="ConfirmAccuracy" name="ConfirmAccuracy" required />
      <span class="check-text">@Localizer["ConfirmAccuracyLabel"]</span>
    </label>
<br/>
    <label class="declaration-row">
      <input class="form-check-input" type="checkbox" id="AcceptLiability" name="AcceptLiability" required />
      <span class="check-text">@Localizer["AcceptLiabilityLabel"]</span>
    </label>
  </div>

  @if (TempData["ReviewError"] is string err && !string.IsNullOrWhiteSpace(err))
  {
    <div class="alert alert-danger mt-3 mb-0 py-2 px-3 small">@err</div>
  }
</div>


    <!-- === Actions bar (الأزرار فقط) === -->
    <div class="form-actions-bar">
        <a asp-action="Attachments" class="btn btn-secondary">
            @Localizer["Back"]
        </a>

        <button type="submit" id="btnSubmit" class="btn btn-success">
            @Localizer["Submit Disclosure"]
        </button>
    </div>
</form>

@section Scripts {
<script>
(function () {
  const c1  = document.getElementById('ConfirmAccuracy');
  const c2  = document.getElementById('AcceptLiability');
  const btn = document.getElementById('btnSubmit');
  function toggle(){ btn.disabled = !(c1?.checked && c2?.checked); }
  if (c1 && c2 && btn){ c1.addEventListener('change', toggle); c2.addEventListener('change', toggle); toggle(); }
})();
</script>
}
