@using IfsahApp.Core.ViewModels
@using Microsoft.AspNetCore.Mvc.Rendering
@model IEnumerable<DisclosureDashboardViewModel>

@inject IfsahApp.Infrastructure.Services.IEnumLocalizer EnumLocalizer
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@{
    ViewBag.Title = Localizer["ReviewDashboardTitle"];
    var sizes = new int[] { 5, 10, 20, 50 };
    var statusList = (ViewBag.StatusList as List<SelectListItem>) ?? new List<SelectListItem>();
}

<div class="container-custom">
    <h2>@Localizer["ReviewAdminDashboardHeading"]</h2>

    <!-- Filter Box -->
    <form method="get" class="filter-box">
        <!-- Status Filter -->
        <div class="form-group">
            <label for="status">@Localizer["StatusLabel"]</label>
            <select name="status" id="status" class="filter-input">
                @foreach (var item in statusList)
                {
                    var val = item.Value ?? "";
                    var ls  = val.Equals("All", StringComparison.OrdinalIgnoreCase)
                        ? Localizer["Status_All"]
                        : Localizer[$"Status_{val}"];
                    var label = ls.IsResourceNotFound ? (item.Text ?? val) : ls.Value;

                    <option value="@val" selected="@(item.Selected ? "selected" : null)">@label</option>
                }
            </select>
        </div>

        <!-- Reference Filter -->
        <div class="form-group">
            <label for="reference">@Localizer["ReferenceLabel"]</label>
            <input type="text" name="reference" id="reference" class="filter-input"
                   value="@ViewBag.SelectedReference" placeholder="@Localizer["EnterReferencePlaceholder"]">
        </div>

        <!-- Page Size Filter -->
        <div class="form-group">
            <label for="pageSize">@Localizer["ShowLabel"]</label>
            <select name="pageSize" id="pageSize" class="filter-input">
                @foreach (var size in sizes)
                {
                    <option value="@size" selected="@(ViewBag.PageSize == size ? "selected" : null)">@size</option>
                }
            </select>
        </div>

        <!-- Filter Buttons -->
        <div class="button-group">
            <button type="submit" class="filter-btn">@Localizer["FilterBtn"]</button>
            <a href="@Url.Action("Index", "Dashboard")" class="clear-btn">@Localizer["ClearBtn"]</a>
        </div>
    </form>

    <!-- Table -->
    <div class="table-custom-responsive">
        <table class="table-custom">
            <thead>
                <tr>
                    <th>@Localizer["ActionCol"]</th>
                    <th>@Localizer["StatusCol"]</th>
                    <th>@Localizer["LocationCol"]</th>
                    <th>@Localizer["DateCol"]</th>
                    <th>@Localizer["TypeCol"]</th>
                    <th>@Localizer["ReferenceCol"]</th>
                </tr>
            </thead>
            <tbody>
                @if (Model == null || !Model.Any())
                {
                    <tr>
                        <td colspan="6">@Localizer["NoData"]</td>
                    </tr>
                }
                else
                {
                    @foreach (var item in Model)
                    {
                        var rowKey = $"Status_{item.Status}";
                        var rowLs  = Localizer[rowKey];
                        var statusLabel = rowLs.IsResourceNotFound ? item.Status.ToString() : rowLs.Value;

                        <tr>
                            <td>
                                <a href="@Url.Action("ReviewDisclosure","Review", new { reference = item.Reference })"
                                   class="table-btn table-btn-sm">@Localizer["ReviewBtn"]</a>
                            </td>
                            <td>@statusLabel</td>
                            <td>@item.Location</td>
                            <td>@item.Date.ToString("yyyy-MM-dd")</td>
                            <td>@item.Type</td>
                            <td>@item.Reference</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <nav>
        <ul class="pagination-custom">
            <!-- Previous button -->
            <li class="@(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a href="@Url.Action("Index", new {
                    status = statusList.FirstOrDefault(i => i.Selected)?.Value ?? "All",
                    reference = ViewBag.SelectedReference,
                    page = ViewBag.CurrentPage - 1,
                    pageSize = ViewBag.PageSize
                })">@Localizer["Previous"]</a>
            </li>

            <!-- Page numbers -->
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="@(ViewBag.CurrentPage == i ? "active" : "")">
                    <a href="@Url.Action("Index", new {
                        status = statusList.FirstOrDefault(s => s.Selected)?.Value ?? "All",
                        reference = ViewBag.SelectedReference,
                        page = i,
                        pageSize = ViewBag.PageSize
                    })">@i</a>
                </li>
            }

            <!-- Next button -->
            <li class="@(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                <a href="@Url.Action("Index", new {
                    status = statusList.FirstOrDefault(i => i.Selected)?.Value ?? "All",
                    reference = ViewBag.SelectedReference,
                    page = ViewBag.CurrentPage + 1,
                    pageSize = ViewBag.PageSize
                })">@Localizer["Next"]</a>
            </li>
        </ul>
    </nav>
</div>
